<?xml version="1.0" encoding="UTF-8" ?>
<configuration>

    <conversionRule conversionWord="clr" class="org.springframework.boot.logging.logback.ColorConverter"/>
    <springProperty name="PROFILE" source="monitoring-profile" />

    <!-- 개발용 텍스트 패턴 -->
    <property name="CONSOLE_LOG_PATTERN" value="[%clr(%-5level)] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %msg%n"/>

    <!-- Console Appender (개발용 - 텍스트 형태) -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- JSON Console Appender (Lambda용 - 안전한 JSON, CloudWatch Logs로 자동 전송) -->
    <appender name="JSON_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeContext>true</includeContext>
            <includeMdc>true</includeMdc>
            <includeStackTrace>true</includeStackTrace>
            <stackTracePattern>%ex{full}</stackTracePattern>
            <customFields>{"module":"batch","environment":"${SPRING_PROFILES_ACTIVE:-unknown}","requestId":"${AWS_REQUEST_ID:-}","functionName":"${AWS_LAMBDA_FUNCTION_NAME:-}","functionVersion":"${AWS_LAMBDA_FUNCTION_VERSION:-}"}</customFields>
            <fieldNames>
                <timestamp>@timestamp</timestamp>
                <level>level</level>
                <thread>thread</thread>
                <logger>logger</logger>
                <message>message</message>
                <stackTrace>stack_trace</stackTrace>
            </fieldNames>
            <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                <maxDepthPerThrowable>30</maxDepthPerThrowable>
                <maxLength>2048</maxLength>
                <shortenedClassNameLength>20</shortenedClassNameLength>
                <exclude>sun\.reflect\..*</exclude>
                <exclude>java\.lang\.reflect\.Method</exclude>
                <exclude>org\.springframework\.aop\..*</exclude>
                <exclude>org\.springframework\.security\..*</exclude>
                <exclude>org\.springframework\.web\..*</exclude>
                <exclude>org\.apache\.catalina\..*</exclude>
                <exclude>org\.apache\.coyote\..*</exclude>
                <exclude>org\.apache\.tomcat\..*</exclude>
                <rootCauseFirst>true</rootCauseFirst>
            </throwableConverter>
        </encoder>
    </appender>

    <!-- Lambda 환경 - Console 로그만 사용 (CloudWatch Logs로 자동 전송) -->
    <springProfile name="local">
        <!-- 로컬 개발: 텍스트 형태로 읽기 쉽게 -->
        <root level="DEBUG">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <springProfile name="dev,lambda">
        <!-- Lambda 개발: INFO 레벨로 적절한 로그 양 유지 (CloudWatch 비용 고려) -->
        <root level="INFO">
            <appender-ref ref="JSON_CONSOLE"/>
        </root>
        
        <!-- 우리 애플리케이션 코드는 DEBUG로 상세히 확인 -->
        <logger name="com.edukit" level="DEBUG" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        
        <!-- Spring Framework 핵심만 INFO 레벨로 제한 -->
        <logger name="org.springframework" level="INFO" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        
        <!-- AWS SDK 로그는 WARN 레벨로 제한 (너무 verbose함) -->
        <logger name="software.amazon.awssdk" level="WARN" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        
        <!-- Hibernate는 WARN 레벨로 (SQL 로그는 필요시에만) -->
        <logger name="org.hibernate" level="WARN" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        
        <!-- HikariCP 커넥션 풀 로그도 WARN으로 -->
        <logger name="com.zaxxer.hikari" level="WARN" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        
        <!-- 디버깅 필요시에만 활성화 (평소에는 주석 처리) -->
        <!-- 
        <logger name="org.hibernate.SQL" level="DEBUG" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        <logger name="org.hibernate.type.descriptor.sql" level="TRACE" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        <logger name="org.springframework.transaction" level="DEBUG" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        <logger name="org.springframework.jdbc" level="DEBUG" additivity="false">
            <appender-ref ref="JSON_CONSOLE"/>
        </logger>
        -->
    </springProfile>

    <springProfile name="prod">
        <!-- Lambda 운영: 안전한 JSON, WARN 레벨 이상만 -->
        <root level="WARN">
            <appender-ref ref="JSON_CONSOLE"/>
        </root>
    </springProfile>

    <springProfile name="test">
        <!-- 테스트: 텍스트 형태로 디버깅 편의성 -->
        <root level="DEBUG">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

</configuration>
