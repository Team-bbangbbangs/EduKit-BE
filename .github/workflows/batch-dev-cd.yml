name: Teacher Verification Batch - Dev

on:
  schedule:
    # Îß§ÎÖÑ 3Ïõî 1Ïùº, 9Ïõî 1Ïùº ÏûêÏ†ï (KST) = UTC 15:00
    - cron: '0 15 1 3,9 *'
  workflow_dispatch: # ÏàòÎèô Ïã§Ìñâ Í∞ÄÎä•

env:
  AWS_REGION: ap-northeast-2
  LAMBDA_FUNCTION_NAME: edukit-batch-teacher-verification-dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev # dev ÌôòÍ≤Ω ÏÇ¨Ïö©
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop # develop Î∏åÎûúÏπòÏóêÏÑú ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ

      - name: Check if running on develop branch
        run: |
          if [ "${{ github.ref }}" != "refs/heads/develop" ]; then
            echo "‚ùå This workflow only runs on develop branch"
            echo "Current branch: ${{ github.ref }}"
            exit 1
          fi
          echo "‚úÖ Running on develop branch - proceeding with batch execution"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create application.yml from secrets
        run: |
          mkdir -p edukit-batch/src/main/resources
          echo '${{ secrets.BATCH_APPLICATION_YML }}' > edukit-batch/src/main/resources/application-dev.yml 

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build batch JAR
        run: ./gradlew :edukit-batch:bootJar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Package and Deploy to Lambda
        run: |
          cd edukit-batch/build/libs
          JAR_FILE=$(ls edukit-batch-*.jar | head -1)
          echo "Found JAR file: $JAR_FILE"
          
          # JARÎ•º ZIPÏúºÎ°ú Ìå®ÌÇ§Ïßï
          zip lambda-deployment.zip $JAR_FILE
          
          # LambdaÏóê Î∞∞Ìè¨
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://lambda-deployment.zip
          
          echo "‚úÖ Lambda deployment completed"

      - name: Wait for Lambda deployment
        run: |
          echo "‚è≥ Waiting for Lambda deployment to complete..."
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }}
          echo "‚úÖ Lambda function updated successfully"

      - name: Execute Teacher Verification Batch
        run: |
          echo "üöÄ Starting batch execution..."
          aws lambda invoke \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --payload '{}' \
            --cli-binary-format raw-in-base64-out \
            response.json
          
          echo "üìÑ Lambda execution response:"
          cat response.json
          
          STATUS_CODE=$(aws lambda invoke \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --payload '{}' \
            --cli-binary-format raw-in-base64-out \
            --query 'StatusCode' \
            --output text \
            /tmp/response.json)
          
          echo "Lambda Status Code: $STATUS_CODE"
          
          if [ "$STATUS_CODE" == "200" ]; then
            echo "‚úÖ Batch execution completed successfully"
          else
            echo "‚ùå Batch execution failed with status code: $STATUS_CODE"
            exit 1
          fi

      - name: Notify completion
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "üéâ Teacher verification batch completed successfully on $(date)"
          else
            echo "üí• Teacher verification batch failed on $(date)"
          fi
